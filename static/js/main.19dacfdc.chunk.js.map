{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","yearOnIC","state","selectedYear","slice","monthOnIC","Math","floor","random","toString","padStart","birthday","join","multiRegionCode","selectedRegion","split","regionCode","length","fourLastNumberGenderBased","selectedGender","icNumber","setState","handleChange","e","defineProperty","target","name","value","componentDidMount","axios","get","then","response","region","data","catch","error","start","stop","step","currentYear","Date","getFullYear","year","Array","from","_","i","gender","disabledButton","isLoaded","copyText","_this2","stateList","map","react_default","a","createElement","key","id","code","yearList","genderList","g","className","defaultValue","onChange","disabled","onClick","navigator","clipboard","writeText","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19dacfdc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport \"bulma/css/bulma.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      region: [],\n      year: [],\n      gender: [],\n      selectedRegion: null,\n      selectedYear: null,\n      selectedGender: null,\n      icNumber: null,\n      isLoaded: false,\n      copyText: 'Copy!'\n    };\n  }\n\n  handleClick = () => {\n    let yearOnIC = this.state.selectedYear.slice(2);\n    let monthOnIC = Math.floor(Math.random() * Math.floor(12) + 1)\n      .toString()\n      .padStart(2, \"0\");\n    let dayOnIC = Math.floor(\n      Math.random() * Math.floor(monthOnIC === \"02\" ? 28 : 30) + 1\n    )\n      .toString()\n      .padStart(2, \"0\");\n    const birthday = [yearOnIC, monthOnIC, dayOnIC].join(\"\");\n\n    let multiRegionCode = this.state.selectedRegion.split(\",\");\n    const regionCode =\n      multiRegionCode[Math.floor(Math.random() * multiRegionCode.length)];\n\n    let fourLastNumberGenderBased =\n      this.state.selectedGender === \"MALE\"\n        ? Math.floor(Math.random() * Math.floor(5)) * 2 + 1\n        : Math.floor(Math.random() * Math.floor(5)) * 2;\n    const fourLastNumber =\n      Math.floor(Math.random() * Math.floor(999))\n        .toString()\n        .padStart(3, \"0\") + fourLastNumberGenderBased.toString();\n\n    const icNumber = [birthday, regionCode, fourLastNumber].join(\"-\");\n\n    this.setState({\n      icNumber\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  componentDidMount = () => {\n    let url = \"data/states.json\";\n    axios\n      .get(url)\n      .then(response => {\n        this.setState({\n          region: response.data\n        });\n      })\n      .catch(error => this.setState({ error }));\n\n    let currentYear = new Date().getFullYear();\n    let range = (start, stop, step) =>\n      Array.from(\n        { length: (stop - start) / step + 1 },\n        (_, i) => start + i * step\n      );\n    this.setState({\n      year: range(currentYear, currentYear - 70, -1)\n    });\n\n    let genderOption = [\"MALE\", \"FEMALE\"];\n    this.setState({\n      gender: genderOption\n    });\n  };\n\n  disabledButton = () => {\n    return this.state.selectedGender && this.state.selectedRegion && this.state.selectedYear;\n  };\n\n  render() {\n    const stateList = this.state.region.map(state => (\n      <option key={state.id} value={state.code}>\n        {state.name}\n      </option>\n    ));\n    const yearList = this.state.year.map(year => (\n      <option key={year} value={year}>\n        {year}\n      </option>\n    ));\n    const genderList = this.state.gender.map(g => (\n      <option key={g} value={g}>\n        {g}\n      </option>\n    ));\n\n    return (\n      <div>\n        <div className=\"container\">\n          <section className=\"columns is-section-header\">\n            <div className=\"column is-full has-text-centered\">\n              <div className=\"container\">\n                <h1 className=\"title\">Malaysia NRIC Generator</h1>\n              </div>\n            </div>\n          </section>\n          <section className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-half is-offset-one-quarter\">\n                <div className=\"box has-background-info\">\n                  <div className=\"field\">\n                    <div className=\"control is-expanded\">\n                      <div className=\"select is-fullwidth\">\n                        <select\n                          defaultValue={\"DEFAULT\"}\n                          name=\"selectedRegion\"\n                          onChange={this.handleChange}\n                        >\n                          <option value=\"DEFAULT\" disabled>\n                            {\" \"}\n                            Select State{\" \"}\n                          </option>\n                          {stateList}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <div className=\"control is-expanded\">\n                      <div className=\"select is-fullwidth\">\n                        <select\n                          defaultValue={\"DEFAULT\"}\n                          name=\"selectedYear\"\n                          onChange={this.handleChange}\n                        >\n                          <option value=\"DEFAULT\" disabled>\n                            Select Year\n                          </option>\n                          {yearList}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <div className=\"control is-expanded\">\n                      <div className=\"select is-fullwidth\">\n                        <select\n                          defaultValue={\"DEFAULT\"}\n                          name=\"selectedGender\"\n                          onChange={this.handleChange}\n                        >\n                          <option value=\"DEFAULT\" disabled>\n                            Select Gender\n                          </option>\n                          {genderList}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"control has-text-centered\">\n                    <button className=\"button is-primary\" onClick={this.handleClick} disabled={!this.disabledButton()}>Generate!</button>\n                  </div>\n                  {this.state.icNumber &&\n                  <div>\n                    <div className=\"section is-result-padding\">\n                      <div className=\"container has-text-centered\">\n                        <h1 className=\"title\">{this.state.icNumber}</h1>\n                      </div>\n                    </div>\n                    <div className=\"control has-text-centered\">\n                      <button className=\"button is-link\" onClick={() => {\n                        navigator.clipboard.writeText(this.state.icNumber);\n                        this.setState({copyText: 'Copied!'});\n                        }}>\n                        {this.state.copyText}\n                      </button>\n                    </div>\n                  </div>}\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n        <footer className=\"footer has-backorund-white-bis\">\n          <div className=\"content has-text-centered\">\n            <p>\n              React + Bulma project by <a href=\"amiruddin.ml\">Amiruddin Roslam</a>.\n            </p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}